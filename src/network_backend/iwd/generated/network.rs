// This code was autogenerated with `dbus-codegen-rust -c nonblock -m None --dbuscrate ::dbus -o network.rs`, see https://github.com/diwic/dbus-rs
use ::dbus;
use ::dbus::arg;
use ::dbus::nonblock;

pub trait NetConnmanIwdNetwork {
    fn connect(&self) -> nonblock::MethodReply<()>;
    fn name(&self) -> nonblock::MethodReply<String>;
    fn connected(&self) -> nonblock::MethodReply<bool>;
    fn device(&self) -> nonblock::MethodReply<dbus::Path<'static>>;
    fn type_(&self) -> nonblock::MethodReply<String>;
    fn known_network(&self) -> nonblock::MethodReply<dbus::Path<'static>>;
}

impl<'a, T: nonblock::NonblockReply, C: ::std::ops::Deref<Target = T>> NetConnmanIwdNetwork for nonblock::Proxy<'a, C> {
    fn connect(&self) -> nonblock::MethodReply<()> {
        self.method_call("net.connman.iwd.Network", "Connect", ())
    }

    fn name(&self) -> nonblock::MethodReply<String> {
        <Self as nonblock::stdintf::org_freedesktop_dbus::Properties>::get(&self, "net.connman.iwd.Network", "Name")
    }

    fn connected(&self) -> nonblock::MethodReply<bool> {
        <Self as nonblock::stdintf::org_freedesktop_dbus::Properties>::get(
            &self,
            "net.connman.iwd.Network",
            "Connected",
        )
    }

    fn device(&self) -> nonblock::MethodReply<dbus::Path<'static>> {
        <Self as nonblock::stdintf::org_freedesktop_dbus::Properties>::get(&self, "net.connman.iwd.Network", "Device")
    }

    fn type_(&self) -> nonblock::MethodReply<String> {
        <Self as nonblock::stdintf::org_freedesktop_dbus::Properties>::get(&self, "net.connman.iwd.Network", "Type")
    }

    fn known_network(&self) -> nonblock::MethodReply<dbus::Path<'static>> {
        <Self as nonblock::stdintf::org_freedesktop_dbus::Properties>::get(
            &self,
            "net.connman.iwd.Network",
            "KnownNetwork",
        )
    }
}
