// This code was autogenerated with `dbus-codegen-rust -c nonblock -m None --dbuscrate ::dbus -o known_network.rs`, see https://github.com/diwic/dbus-rs
use ::dbus;
use ::dbus::arg;
use ::dbus::nonblock;

pub trait NetConnmanIwdKnownNetwork {
    fn forget(&self) -> nonblock::MethodReply<()>;
    fn name(&self) -> nonblock::MethodReply<String>;
    fn type_(&self) -> nonblock::MethodReply<String>;
    fn hidden(&self) -> nonblock::MethodReply<bool>;
    fn autoconnect(&self) -> nonblock::MethodReply<bool>;
    fn set_autoconnect(&self, value: bool) -> nonblock::MethodReply<()>;
    fn last_connected_time(&self) -> nonblock::MethodReply<String>;
}

impl<'a, T: nonblock::NonblockReply, C: ::std::ops::Deref<Target = T>> NetConnmanIwdKnownNetwork
    for nonblock::Proxy<'a, C>
{
    fn forget(&self) -> nonblock::MethodReply<()> {
        self.method_call("net.connman.iwd.KnownNetwork", "Forget", ())
    }

    fn name(&self) -> nonblock::MethodReply<String> {
        <Self as nonblock::stdintf::org_freedesktop_dbus::Properties>::get(
            &self,
            "net.connman.iwd.KnownNetwork",
            "Name",
        )
    }

    fn type_(&self) -> nonblock::MethodReply<String> {
        <Self as nonblock::stdintf::org_freedesktop_dbus::Properties>::get(
            &self,
            "net.connman.iwd.KnownNetwork",
            "Type",
        )
    }

    fn hidden(&self) -> nonblock::MethodReply<bool> {
        <Self as nonblock::stdintf::org_freedesktop_dbus::Properties>::get(
            &self,
            "net.connman.iwd.KnownNetwork",
            "Hidden",
        )
    }

    fn autoconnect(&self) -> nonblock::MethodReply<bool> {
        <Self as nonblock::stdintf::org_freedesktop_dbus::Properties>::get(
            &self,
            "net.connman.iwd.KnownNetwork",
            "Autoconnect",
        )
    }

    fn last_connected_time(&self) -> nonblock::MethodReply<String> {
        <Self as nonblock::stdintf::org_freedesktop_dbus::Properties>::get(
            &self,
            "net.connman.iwd.KnownNetwork",
            "LastConnectedTime",
        )
    }

    fn set_autoconnect(&self, value: bool) -> nonblock::MethodReply<()> {
        <Self as nonblock::stdintf::org_freedesktop_dbus::Properties>::set(
            &self,
            "net.connman.iwd.KnownNetwork",
            "Autoconnect",
            value,
        )
    }
}
